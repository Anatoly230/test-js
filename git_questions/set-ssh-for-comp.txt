
--- создание ssh ключа ---

все манипуляции проводятся через терминал/консоль


mkdir ~/.ssh 

/*
создаём папку .ssh
знак  ~  (тильда) означает директорю,  откуда запущен терминал, консоль 
/.ssh - создание соответствующей папки 

cd ~/.ssh 

переходим в папку .ssh
 */


ssh-keygen -t rsa -b 4096 -C "yourmail@gmail.com"  

/*
создание/генерация пар ключей - публичный (аналог замок) и приватный(аналог - ключ от замка) 
 описание комманд: 
-t rsa - тип ключа
-b 4096 - длина ключа в битах
-С mail@mail.ru - мэйл зарегистрированного пользователя 

имя ключа по умолчанию id_rsa, но можно установить любое другое удобное или приятное
ssh ключ генеририуется для каждого компьтера один раз
публичный ключ (аналог замок)  с расширением .pub , его и регистрируем не  github в своём профиле, второй ключ (ключ от замка) что без расширения, не показываем нигде и недём ни кому, это всё равно что отдать ключ от замка, который ты повесил в целях безопасности 
*/


cd ~/.ssh 

далее переходим в папку с ssh ключами (если по какой-то случайности вы находитесь не там)

cat id_rsa.pub  

/*если вы заменили название ключей при их генерации то вместо  id_rsa записываем свой ключ, например cat mykey.pub, если нет, то как указано выше cat id_rsa.pub */

выделяем текст, копируем

в браузере переходим в свой профиль на github 
там заходим в меню (в правим верхнем углу иконочка со стрелкой указывающей вниз) -> settings -> SSH and GPG keys
в открывшейся странице нажимаем на кнопку New SSH key
в поле Title записаваем заголовок данного ключа, например компьютер на который утсанавливается ssh ключ, так как с этой парой ключей, можно будет пользоваться только с этого компьютера, чтобы пользоваться на другом компьютере, необходимо на него также установить ssh ключ
в поле key  вставляем скопированный ранее ключ


ssh -T -i ~/.ssh/id_rsa git@github.com   

/*узнать установился ли правильно, и есть ли вообще связь через ssh  ключ
должно выйти такой сообщение
Hi <yourlogin>! You've successfully authenticated, but GitHub does not provide shell access.
*/

git remote -v 

/*проверка того, что можно делать с удалённым репозиторием
должно выйти сообщение : 
origin  https://github.com/Your_login/your-project.git (fetch) получать
origin  https://github.com/Your_login/your-project.git (push) отправлять
*/